// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  firstName String
  lastName  String
  email     String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Statistic Statistic[]
}

model Quiz {
  id        Int         @id @default(autoincrement())
  title     String
  score     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Question  Question[]
  Statistic Statistic[]
}

model Question {
  id        Int      @id @default(autoincrement())
  question  String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  quizId    Int
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  options   Option[]
}

model Option {
  id         Int      @id @default(autoincrement())
  option     String
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Statistic {
  id         Int      @id @default(autoincrement())
  quiz       Quiz     @relation(fields: [quizId], references: [id])
  quizId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  totalScore Int
  status     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
